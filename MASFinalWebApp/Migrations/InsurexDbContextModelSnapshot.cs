// <auto-generated />
using System;
using MASFinalWebApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MASFinalWebApp.Migrations
{
    [DbContext(typeof(InsurexDbContext))]
    partial class InsurexDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("MASFinalWebApp.Models.Insurance", b =>
                {
                    b.Property<int>("InsuranceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("GeneralTermsAndConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("InsuranceAmount")
                        .HasColumnType("real");

                    b.Property<string>("InsuranceRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsuranceID");

                    b.ToTable("Insurance");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsuranceAgreement", b =>
                {
                    b.Property<int>("InsuranceAgreementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BuyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InsuranceID")
                        .HasColumnType("int");

                    b.Property<int?>("InsurancePackageID")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("InsuranceAgreementID");

                    b.HasIndex("ClientID");

                    b.HasIndex("InsuranceID");

                    b.HasIndex("InsurancePackageID");

                    b.ToTable("InsuranceAgreement");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsurancePackage", b =>
                {
                    b.Property<int>("InsurancePackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("InsurancePackageID");

                    b.ToTable("InsurancePackage");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsurancesInPackages", b =>
                {
                    b.Property<int>("InsuranceID")
                        .HasColumnType("int");

                    b.Property<int>("InsurancePackageID")
                        .HasColumnType("int");

                    b.HasKey("InsuranceID", "InsurancePackageID");

                    b.HasIndex("InsurancePackageID");

                    b.ToTable("InsurancesInPackages");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Insurer", b =>
                {
                    b.Property<int>("InsurerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsurerLicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerPersonID")
                        .HasColumnType("int");

                    b.HasKey("InsurerID");

                    b.HasIndex("OwnerPersonID");

                    b.ToTable("Insurer");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Invoice", b =>
                {
                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceAgreementRefID")
                        .HasColumnType("int");

                    b.HasKey("InvoiceNo");

                    b.HasIndex("InsuranceAgreementRefID")
                        .IsUnique();

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.SportDiscipline", b =>
                {
                    b.Property<int>("SportDisciplineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SportInsuranceID")
                        .HasColumnType("int");

                    b.HasKey("SportDisciplineID");

                    b.HasIndex("SportInsuranceID");

                    b.ToTable("SportDiscipline");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.AutocascoInsurance", b =>
                {
                    b.HasBaseType("MASFinalWebApp.Models.Insurance");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.HasIndex("OwnerID");

                    b.ToTable("AutocascoInsurance");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.PropertyInsurance", b =>
                {
                    b.HasBaseType("MASFinalWebApp.Models.Insurance");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("PropertyInsurance");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.SportInsurance", b =>
                {
                    b.HasBaseType("MASFinalWebApp.Models.Insurance");

                    b.ToTable("SportInsurance");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Client", b =>
                {
                    b.HasBaseType("MASFinalWebApp.Models.Person");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Employee", b =>
                {
                    b.HasBaseType("MASFinalWebApp.Models.Person");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<int>("TaxIdentificationNumber")
                        .HasColumnType("int");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Owner", b =>
                {
                    b.HasBaseType("MASFinalWebApp.Models.Person");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsuranceAgreement", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Client", "Client")
                        .WithMany("InsuranceAgreements")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFinalWebApp.Models.Insurance", "Insurance")
                        .WithMany("InsuranceAgreements")
                        .HasForeignKey("InsuranceID");

                    b.HasOne("MASFinalWebApp.Models.InsurancePackage", "InsurancePackage")
                        .WithMany("InsuranceAgreements")
                        .HasForeignKey("InsurancePackageID");

                    b.Navigation("Client");

                    b.Navigation("Insurance");

                    b.Navigation("InsurancePackage");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsurancesInPackages", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Insurance", "Insurances")
                        .WithMany("InsurancesInPackages")
                        .HasForeignKey("InsuranceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFinalWebApp.Models.InsurancePackage", "InsurancePackage")
                        .WithMany("InsurancesInPackages")
                        .HasForeignKey("InsurancePackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsurancePackage");

                    b.Navigation("Insurances");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Insurer", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Owner", null)
                        .WithMany("Insurers")
                        .HasForeignKey("OwnerPersonID");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Invoice", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.InsuranceAgreement", "InsuranceAgreement")
                        .WithOne("Invoice")
                        .HasForeignKey("MASFinalWebApp.Models.Invoice", "InsuranceAgreementRefID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceAgreement");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.SportDiscipline", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.SportInsurance", "SportInsurance")
                        .WithMany("CoveredSports")
                        .HasForeignKey("SportInsuranceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SportInsurance");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.AutocascoInsurance", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Insurance", null)
                        .WithOne()
                        .HasForeignKey("MASFinalWebApp.Models.AutocascoInsurance", "InsuranceID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("MASFinalWebApp.Models.Person", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.PropertyInsurance", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Insurance", null)
                        .WithOne()
                        .HasForeignKey("MASFinalWebApp.Models.PropertyInsurance", "InsuranceID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinalWebApp.Models.SportInsurance", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Insurance", null)
                        .WithOne()
                        .HasForeignKey("MASFinalWebApp.Models.SportInsurance", "InsuranceID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Client", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("MASFinalWebApp.Models.Client", "PersonID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Employee", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("MASFinalWebApp.Models.Employee", "PersonID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Owner", b =>
                {
                    b.HasOne("MASFinalWebApp.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("MASFinalWebApp.Models.Owner", "PersonID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Insurance", b =>
                {
                    b.Navigation("InsuranceAgreements");

                    b.Navigation("InsurancesInPackages");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsuranceAgreement", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.InsurancePackage", b =>
                {
                    b.Navigation("InsuranceAgreements");

                    b.Navigation("InsurancesInPackages");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.SportInsurance", b =>
                {
                    b.Navigation("CoveredSports");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Client", b =>
                {
                    b.Navigation("InsuranceAgreements");
                });

            modelBuilder.Entity("MASFinalWebApp.Models.Owner", b =>
                {
                    b.Navigation("Insurers");
                });
#pragma warning restore 612, 618
        }
    }
}
